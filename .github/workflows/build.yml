name: Build

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17
          cache: maven

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: v18
          cache: 'npm'
          cache-dependency-path: |
            shopping-ui/package-lock.json

      - name: Build and Deploy with Maven
        run: mvn -s .github/workflows/maven-settings.xml package -B -V

      - name: Login to Docker Hub and Publish the Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
          cd gateway
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd bestseller-toys
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd bestseller-fashion
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd hot-deals
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd inventory-service-mock
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd order
          ./ci/buildAndPushDockerImages.bash latest
          cd ..
          cd checkout
          ./ci/buildAndPushDockerImages.bash latest
          cd ..

      - name: Notify Slack channel
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,ref,message,author,workflow,action
          author_name: github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always()

      - name: Dispatch event to trigger deployment to DEV
        if: github.ref == 'refs/heads/develop'
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json"  -H "Content-Type: application/json" https://api.github.com/repos/steadybit/demo-infrastructure/dispatches --data '{"event_type": "deploy-to-dev-demo"}'
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json"  -H "Content-Type: application/json" https://api.github.com/repos/steadybit/demo-infrastructure/dispatches --data '{"event_type": "deploy-to-sandbox-demo"}'

      - name: Dispatch event to trigger deployment to PROD
        if: github.ref == 'refs/heads/main'
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json"  -H "Content-Type: application/json" https://api.github.com/repos/steadybit/demo-infrastructure/dispatches --data '{"event_type": "deploy-to-dev-demo"}'
