name: Build

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 17
          cache: maven

      - name: Setup Node.js v14
        uses: actions/setup-node@v2
        with:
          node-version: v14

      - name: Build and Deploy with Maven
        run: mvn -s .github/workflows/maven-settings.xml install -B -V

      - name: Login to Docker Hub and Publish the Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
          docker push steadybit/gateway
          docker push steadybit/bestseller-toys
          docker push steadybit/bestseller-fashion
          docker push steadybit/hot-deals

      - name: Notify Slack channel
        uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - name: Dispatch event to trigger deployment to DEV
        if: github.ref == 'refs/heads/develop'
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json"  -H "Content-Type: application/json" https://api.github.com/repos/steadybit/demo-infrastructure/dispatches --data '{"event_type": "deploy_demo_to_dev"}'

      - name: Dispatch event to trigger deployment to PROD
        if: github.ref == 'refs/heads/main'
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json"  -H "Content-Type: application/json" https://api.github.com/repos/steadybit/demo-infrastructure/dispatches --data '{"event_type": "deploy_demo_to_prod"}'
