{{- if .Values.hotDeals.enabled -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  name: hotdeals-nginx-conf
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        access_log off;

        sendfile        on;
        keepalive_timeout  65;

        upstream hot-deals {
            server 127.0.0.1:8099;
        }

        server {
            listen 8083;

            location / {
                proxy_pass         http://hot-deals;
                proxy_redirect     off;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: hot-deals
    service-tier: "2"
    domain: "shop-products"
    tags.steadybit.com/service-validation: "http"
    tags.datadoghq.com/service: shop-products
    tags.datadoghq.com/version: 1.0.0
  name: hot-deals
spec:
  replicas: {{ .Values.hotDeals.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      run: hot-deals-exposed
  template:
    metadata:
      labels:
        run: hot-deals-exposed
        service-tier: "2"
        domain: "shop-products"
        tags.datadoghq.com/service: shop-products
        tags.datadoghq.com/version: 1.0.0
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: steadybit-demo
      {{ if .Values.hotDeals.podAffinity }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: run
                    operator: In
                    values:
                      - hot-deals-exposed
              topologyKey: "topology.kubernetes.io/zone"
      {{ end }}
      containers:
        - image: {{ .Values.hotDeals.image.name}}:{{ .Values.hotDeals.image.tag }}
          imagePullPolicy: Always
          name: hot-deals
          env:
            - name: SERVER_PORT
              value: "8099"
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: rest.endpoint.inventory
              value: {{ .Values.global.endpoints.inventory }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8099
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8099
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 10
          resources: {{ toYaml .Values.hotDeals.resources | nindent 14 }}
        - name: hot-deals-nginx
          image: nginx:alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8083
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8083
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
          resources: {{ toYaml .Values.hotDeals.nginx.resources | nindent 14 }}
          volumeMounts:
            - name: nginx-proxy-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-proxy-config
          configMap:
            name: hotdeals-nginx-conf
      {{- with .Values.hotDeals.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: hot-deals
  name: hot-deals
spec:
  ports:
    - port: 8083
      protocol: TCP
      targetPort: 8083
  selector:
    run: hot-deals-exposed
  type: {{ .Values.hotDeals.service.type}}
{{ if eq .Values.hotDeals.podDisruptionBudget true }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hot-deals-pdb
  namespace: {{ .Release.Namespace }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      run: hot-deals-exposed
{{ end }}
{{- end -}}