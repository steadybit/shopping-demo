{{- if .Values.orders.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: orders
    service-tier: "1"
    domain: "shop-orders"
    tags.datadoghq.com/service: shop-orders
    tags.datadoghq.com/version: 1.0.0
  name: orders
spec:
  replicas: {{ .Values.orders.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      run: orders
  template:
    metadata:
      labels:
        run: orders
        service-tier: "1"
        domain: "shop-orders"
        tags.datadoghq.com/service: shop-orders
        tags.datadoghq.com/version: 1.0.0
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: steadybit-demo
      {{ if .Values.orders.podAffinity }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: run
                    operator: In
                    values:
                      - orders
              topologyKey: "topology.kubernetes.io/zone"
      {{ end }}
      containers:
        - image: {{ .Values.orders.image.name}}:{{ .Values.orders.image.tag }}
          resources: {{ toYaml .Values.orders.resources | nindent 14 }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8086
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8086
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
          imagePullPolicy: Always
          name: orders
          ports:
            - containerPort: 8086
              protocol: TCP
          env:
            - name: ACTIVEMQ_BROKER_HOST
              value: {{.Values.orders.activeMQ.host}}
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
      {{- with .Values.orders.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        - name: regcredinternal
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: orders
  name: orders
spec:
  ports:
    - port: 8086
      protocol: TCP
      targetPort: 8086
  selector:
    run: orders
  type: ClusterIP
{{ if eq .Values.orders.podDisruptionBudget true }}
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: orders-pdb
  namespace: {{ .Release.Namespace }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      run: orders
{{ end }}
{{- end -}}