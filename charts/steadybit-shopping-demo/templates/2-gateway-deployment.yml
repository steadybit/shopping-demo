{{- if .Values.gateway.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: gateway
    service-tier: "1"
    domain: "shop-gateway"
    tags.datadoghq.com/service: shop-gateway
    tags.datadoghq.com/version: 1.0.0
  name: gateway
spec:
  replicas: {{ .Values.gateway.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      run: gateway-exposed
  template:
    metadata:
      labels:
        run: gateway-exposed
        service-tier: "1"
        domain: "shop-gateway"
        tags.datadoghq.com/service: shop-gateway
        tags.datadoghq.com/version: 1.0.0
      {{- with .Values.global.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: steadybit-demo
      containers:
        - image: {{ .Values.gateway.image.name}}:{{ .Values.gateway.image.tag }}
          imagePullPolicy: Always
          name: gateway
          resources: {{ toYaml .Values.gateway.resources | nindent 14 }}
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Dsun.net.inetaddr.ttl=0"
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: rest.endpoint.fashion
              value: {{ .Values.global.endpoints.bestsellerFashion }}
            - name: rest.endpoint.toys
              value: {{ .Values.global.endpoints.bestsellerToys }}
            - name: rest.endpoint.hotdeals
              value: {{ .Values.global.endpoints.hotDeals }}
            - name: rest.endpoint.checkout
              value: {{ .Values.global.endpoints.checkout }}
            - name: rest.endpoint.inventory
              value: {{ .Values.global.endpoints.inventory }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: work-dir
              mountPath: /work
      volumes:
        - name: work-dir
          emptyDir:
            sizeLimit: 256Mi
      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: run
                    operator: In
                    values:
                      - gateway-exposed
              topologyKey: "topology.kubernetes.io/zone"
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    run: gateway
  name: gateway
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    run: gateway-exposed
  type: LoadBalancer
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gateway-pdb
  namespace: {{ .Release.Namespace }}
spec:
  minAvailable: 1
  selector:
    matchLabels:
      run: gateway-exposed
{{- end -}}