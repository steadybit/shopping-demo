---
apiVersion: v1
kind: Namespace
metadata:
  name: steadybit-demo
  labels:
    app: steadybit-demo
---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: steadybit-demo
      namespace: steadybit-demo
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: steadybit-demo:view
      namespace: steadybit-demo
    roleRef:
      kind: ClusterRole
      apiGroup: rbac.authorization.k8s.io
      name: view
    subjects:
      - kind: Group
        name: system:serviceaccounts:steadybit-demo
        apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: steadybit-demo
  labels:
    run: gateway
  name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      run: gateway
  template:
    metadata:
      labels:
        run: gateway
    spec:
      serviceAccountName: steadybit-demo
      containers:
        - image: steadybit/gateway
          imagePullPolicy: IfNotPresent
          name: gateway
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  namespace: steadybit-demo
  labels:
    run: gateway
  name: gateway
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    run: gateway
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: steadybit-demo
  labels:
    run: fashion-bestseller
  name: fashion-bestseller
spec:
  replicas: 1
  selector:
    matchLabels:
      run: fashion-bestseller
  template:
    metadata:
      labels:
        run: fashion-bestseller
    spec:
      serviceAccountName: steadybit-demo
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: run
                      operator: In
                      values:
                        - fashion-bestseller
                topologyKey: "kubernetes.io/hostname"
      containers:
        - image: steadybit/bestseller-fashion
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "768Mi"
              cpu: "1000m"
          imagePullPolicy: IfNotPresent
          name: fashion-bestseller
          ports:
            - containerPort: 8082
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8082
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8082
            initialDelaySeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  namespace: steadybit-demo
  labels:
    run: fashion-bestseller
  name: fashion-bestseller
spec:
  ports:
    - port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    run: fashion-bestseller
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: steadybit-demo
  labels:
    run: toys-bestseller
  name: toys-bestseller
spec:
  replicas: 1
  selector:
    matchLabels:
      run: toys-bestseller
  template:
    metadata:
      labels:
        run: toys-bestseller
    spec:
      serviceAccountName: steadybit-demo
      containers:
        - image: steadybit/bestseller-toys:latest
          imagePullPolicy: IfNotPresent
          name: toys-bestseller
          ports:
            - containerPort: 8081
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8081
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8081
            initialDelaySeconds: 60
      imagePullSecrets:
        - name: regcredinternal
---
apiVersion: v1
kind: Service
metadata:
  namespace: steadybit-demo
  labels:
    run: toys-bestseller
  name: toys-bestseller
spec:
  ports:
    - port: 8081
      protocol: TCP
      targetPort: 8081
  selector:
    run: toys-bestseller
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: steadybit-demo
  name: hotdeals-nginx-conf
data:
  nginx.conf: |-
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        upstream hot-deals {
            server 127.0.0.1:8099;
        }

        server {
            listen 8083;

            location / {
                proxy_pass         http://hot-deals;
                proxy_redirect     off;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: steadybit-demo
  labels:
    run: hot-deals
  name: hot-deals
spec:
  replicas: 1
  selector:
    matchLabels:
      run: hot-deals
  template:
    metadata:
      labels:
        run: hot-deals
    spec:
      serviceAccountName: steadybit-demo
      containers:
        - image: steadybit/hot-deals
          imagePullPolicy: IfNotPresent
          name: hot-deals
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
            - name: SERVER_PORT
              value: "8099"
        - name: hot-deals-nginx
          image: nginx:alpine
          ports:
            - containerPort: 8083
          volumeMounts:
            - name: nginx-proxy-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-proxy-config
          configMap:
            name: hotdeals-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  namespace: steadybit-demo
  labels:
    run: hot-deals
  name: hot-deals
spec:
  ports:
    - port: 8083
      protocol: TCP
      targetPort: 8083
  selector:
    run: hot-deals
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: steadybit-demo
  labels:
    run: inventory
  name: inventory
spec:
  replicas: 1
  selector:
    matchLabels:
      run: inventory
  template:
    metadata:
      labels:
        run: inventory
    spec:
      serviceAccountName: steadybit-demo
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: run
                      operator: In
                      values:
                        - inventory
                topologyKey: "kubernetes.io/hostname"
      containers:
        - image: steadybit/inventory
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "768Mi"
              cpu: "1000m"
          imagePullPolicy: IfNotPresent
          name: inventory
          ports:
            - containerPort: 8084
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8084
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8084
            initialDelaySeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  namespace: steadybit-demo
  labels:
    run: inventory
  name: inventory
spec:
  ports:
    - port: 8084
      protocol: TCP
      targetPort: 8084
  selector:
    run: inventory
  type: NodePort
